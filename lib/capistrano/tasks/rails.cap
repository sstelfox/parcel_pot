 
namespace :deploy do
  task "create_db_file" do
    on roles(:app) do
      execute :mkdir, '-pv', shared_path.join('{config,log}')
      unless test("[ -f #{shared_path.join('config/database.yml')} ]")
        upload!('config/database.yml.example', shared_path.join('config/database.yml'))
      end
    end
  end
 
  namespace :db do
    desc "Destructively reset the database"
    task :reset do
      execute "bundle exec rake db:drop RAILS_ENV=#{fetch(:stage)}"
      execute "bundle exec rake db:create RAILS_ENV=#{fetch(:stage)}"
      execute "bundle exec rake db:migrate RAILS_ENV=#{fetch(:stage)}"
      execute "bundle exec rake db:seed RAILS_ENV=#{fetch(:stage)}"
    end
  end
end
 
namespace :rails do
  desc "Open the rails console on one of the remote servers"
  task :console do
    warn "You're about to enter a #{fetch(:stage).upcase} console..."
    run_interactively "bundle exec rails console RAILS_ENV=#{fetch(:stage)}"
  end
  
  desc "tail production log files" 
  task :tail_logs do
    trap("INT") { puts 'Interupted'; exit 0; }
    run "tail -f #{shared_path}/log/production.log" do |channel, stream, data|
      puts "#{channel[:host]}: #{data}" 
      break if stream == :err
    end
  end
end

before "deploy:check:linked_files", "deploy:create_db_file"

